# Form implementation generated from reading ui file 'Dialog.ui'
#
# Created by: PyQt6 UI code generator 6.3.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
# Importing the csv module.
import csv

# Importing the PyQt6 module.
from PyQt6 import QtCore, QtGui, QtWidgets
# Importing the QStandardItemModel class from the PyQt6.QtGui module.
from PyQt6.QtGui import QStandardItemModel
# Importing the QFileDialog class from the PyQt6.QtWidgets module.
from PyQt6.QtWidgets import QFileDialog


# It's a class that inherits from QDialog and has a QTableView, a QLineEdit, and three QPushButtons.
# The QTableView is the widget that will display the data. The QLineEdit is the widget that will display the file path.
# The QPushButtons are the widgets that will allow the user to import, save, and clear the data.
# The setupUi method is the method that is called when the class is instantiated. It sets up the layout of the widgets and
# connects the buttons to their respective methods.
# The loadData method is the method that will load the data from the file into the QTableView.
# The saveData method is the method that will save the data from the QTableView into the file.
# The importData method is the method that will import the data from the file into the QTableView.
class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(493, 686)
        self.gridLayout = QtWidgets.QGridLayout(Dialog)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.tableView = QtWidgets.QTableView(Dialog)
        self.tableView.setObjectName("tableView")
        self.horizontalLayout.addWidget(self.tableView)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.importButton = QtWidgets.QPushButton(Dialog)
        self.importButton.setObjectName("ImportButton")
        self.horizontalLayout_2.addWidget(self.importButton)
        self.saveButton = QtWidgets.QPushButton(Dialog)
        self.saveButton.setObjectName("SaveButton")
        self.horizontalLayout_2.addWidget(self.saveButton)
        self.clearButton = QtWidgets.QPushButton(Dialog)
        self.clearButton.setObjectName("DeleteButton")
        self.horizontalLayout_2.addWidget(self.clearButton)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.gridLayout.addLayout(self.verticalLayout, 1, 0, 1, 1)
        self.filePath = QtWidgets.QLineEdit(Dialog)
        self.filePath.setText("")
        self.filePath.setObjectName("lineFilePath")
        self.gridLayout.addWidget(self.filePath, 0, 0, 1, 1)

        # It's setting up the tableView.
        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)
        model = QStandardItemModel()
        self.tableView.setModel(model)
        self.tableView.horizontalHeader().setStretchLastSection(True)

        # It's connecting the buttons to their respective methods.
        self.clearButton.clicked.connect(self.deleteRow)
        self.saveButton.clicked.connect(self.saveData)
        self.importButton.clicked.connect(self.importData)

    def retranslateUi(self, Dialog):
        """
        The function retranslateUi() is used to translate the text of the widgets in the GUI
        :param Dialog: The name of the window
        """
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.importButton.setText(_translate("Dialog", "Import"))
        self.saveButton.setText(_translate("Dialog", "Save"))
        self.clearButton.setText(_translate("Dialog", "Clear"))
        self.filePath.setPlaceholderText(_translate("Dialog", "File Path"))

    def loadData(self, filename):
        """
        It's iterating through the rows of the file and adding the data to the tableView
        :param filename: The name of the file to open
        """
        with open(filename, "r") as fileInput:
            # It's iterating through the rows of the file and adding the data to the tableView.
            for row in csv.reader(fileInput):
                items = [
                    QtGui.QStandardItem(field.strip())
                    for field in row
                ]
                # for field in row
                # for i in range(len(row)) if i > 2
                # if row[3].lower().find("cgi") > -1:
                self.tableView.model().appendRow(items)

    def saveData(self):
        """
        It's iterating through the rows and columns of the tableView and
        writing the data to a csv file.
        """
        print("save")
        filename = self.filePath.text()
        # It's opening a file dialog and getting the path of the file that the user selected.
        if filename == "":
            path, _filter = QFileDialog.getSaveFileName(self, 'Save File', '', 'CSV(*.csv)')
            filename = path
        # It's opening the file and creating a writer object.
        if filename != "":
            self.filePath.setText(filename)
            csvf = open(filename, 'w', newline='')
            writer = csv.writer(csvf, csv.excel)
            # It's iterating through the rows of the tableView and adding the data to the rowdata list.
            for row in range(self.tableView.model().rowCount()):
                rowdata = []
                # It's iterating through the columns of the tableView and adding the data to the rowdata list.
                for column in range(self.tableView.model().columnCount()):
                    item = self.tableView.model().item(row, column)
                    # It's checking if the item is not None. If the item is not None, it's adding the item to the rowdata
                    # list.
                    if item is not None:
                        rowdata.append(item.text().strip())
                writer.writerow(rowdata)

    def importData(self):
        """
        It's opening a file dialog and getting the path of the file that the user selected. It's importing the data from the
        file into the tableView.
        """
        print("importData")
        # It's opening a file dialog and getting the path of the file that the user selected.
        path, _filter = QFileDialog.getOpenFileName(self, 'Import File', '', 'CSV(*.csv)')
        filename = path
        # It's importing the data from the file into the tableView.
        if filename != "":
            with open(filename, "r") as fileInput:
                # It's reading the file and adding the data to the tableView.
                for row in csv.reader(fileInput):
                    items = [
                        QtGui.QStandardItem(field)
                        for field in row
                    ]
                    # It's adding a row to the tableView.
                    self.tableView.model().appendRow(items)

    def deleteRow(self, filename):
        """
        It removes all the rows from the tableView
        :param filename: the name of the file to be deleted
        """
        print("del")
        self.tableView.model().removeRows(0, self.tableView.model().rowCount())


# It's the main function. It's the function that is called when the program is run.
if __name__ == "__main__":
    # It's importing the sys module.
    import sys

    # It's instantiating the QApplication class.
    app = QtWidgets.QApplication(sys.argv)
    # It's instantiating the QDialog class.
    Dialog = QtWidgets.QDialog()
    # It's instantiating the Ui_Dialog class.
    ui = Ui_Dialog()
    # It's calling the setupUi method of the Ui_Dialog class. The setupUi method is a method that is generated by the
    # PyQt6 UI code generator. It sets up the layout of the widgets and connects the buttons to their respective methods.
    ui.setupUi(Dialog)
    # It's showing the dialog.
    Dialog.show()
    # It's calling the exec_ method of the QApplication object. The exec_ method is a Qt method that starts the event
    # loop.
    sys.exit(app.exec())
